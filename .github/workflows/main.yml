name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: write  # Needed to push reverts

  jobs:
    lint:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout the code
          uses: actions/checkout@v4

        - name: Upload HTML test report
          uses: actions/upload-artifact@v4
          with:
            name: lint.html
            path: app/build/reports/problems/problems-report.html

    unit-test:
      needs: [ lint ]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout the code
          uses: actions/checkout@v4

        - name: Run tests
          id: run_tests
          run: |
            ./gradlew test || echo "test_failed=true" >> $GITHUB_ENV

        - name: Upload test report
          uses: actions/upload-artifact@v4
          with:
            name: unit_test_report
            path: app/build/reports/tests/testDebugUnitTest/

        - name: Revert commit if tests failed
          if: env.test_failed == 'true'
          run: |
            LAST_COMMIT_MSG=$(git log -1 --pretty=%B)
            echo "Last commit message: $LAST_COMMIT_MSG"
            
            if [[ "$LAST_COMMIT_MSG" == *"[auto-revert]"* ]]; then
              echo "Already auto-reverted. Skipping."
              exit 0
            fi
            
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git revert --no-edit HEAD
            git commit --amend -m "Revert auto-failed commit [auto-revert]"
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:master

    package:
      needs: [ unit-test ]
      name: Generate APK
      runs-on: ubuntu-latest
      steps:
        - name: Checkout the code
          uses: actions/checkout@v4

        - name: Set up JDK 17
          uses: actions/setup-java@v1
          with:
            java-version: 17

        - name: Build debug APK
          run: ./gradlew assembleDebug --stacktrace

        - name: Upload APK
          uses: actions/upload-artifact@v4
          with:
            name: note_mvvm_application.apk
            path: app/build/outputs/apk/debug/app-debug.apk












    #OLD YML FILE

    #name: CI
    #on:
    #  push:
    #    branches: [ master ]
    #  pull_request:
    #    branches: [ master ]
    #  workflow_dispatch:
    #
    #jobs:
    #  lint:
    #    runs-on: ubuntu-latest
    #    steps:
    #      - name: Checkout the code
    #        uses: actions/checkout@v4
    #
    #      - name: Upload html test report
    #        uses: actions/upload-artifact@v4
    #        with:
    #          name: lint.html
    #          path: app/build/reports/problems/problems-report.html
    #
    #  unit-test:
    #    needs: [ lint ]
    #    runs-on: ubuntu-latest
    #    steps:
    #      - name: Checkout the code
    #        uses: actions/checkout@v4
    #
    #      - name: Run tests
    #        run: ./gradlew test
    #
    #      - name: Upload test report
    #        uses: actions/upload-artifact@v4
    #        with:
    #          name: unit_test_report
    #          path: app/build/reports/tests/testDebugUnitTest/
    #
    #  package:
    #    needs: [ unit-test ]
    #    name: Generate APK
    #    #    if: ${{ !github.event.act }}
    #    runs-on: ubuntu-latest
    #    steps:
    #      - name: Checkout the code
    #        uses: actions/checkout@v4
    #
    #      - name: set up JDK 17
    #        uses: actions/setup-java@v1
    #        with:
    #          java-version: 17
    #
    #      - name: Build debug APK
    #        run: ./gradlew assembleDebug --stacktrace
    #
    #      - name: Upload APK
    #        uses: actions/upload-artifact@v4
    #        with:
    #          name: note_mvvm_application.apk
    #          path: app/build/outputs/apk/debug/app-debug.apk





    #
    #  instrumentation-test:
    #    needs: [unit-test]
    #    runs-on: ubuntu-latest
    #    steps:
    #      - name: Checkout the code
    #        uses: actions/checkout@v4
    #
    #      - name: Run espresso tests
    #        uses: reactivecircus/android-emulator-runner@v2
    #        with:
    #            api-level: 31
    #            target: google_apis
    #            arch: x86_64
    #            script: ./gradlew connectedCheck
    #            disable-animations: true
    #            emulator-options: -no-window -no-snapshot-save -noaudio -no-boot-anim
    #            working-directory: .
    #            boot-timeout-minutes: 5
    #
    #      - name: Upload test report
    #        uses: actions/upload-artifact@v4
    #        with:
    #          name: instrumentation_test_report
    #          path: app/build/reports/androidTests/connected/




    ##
    #  static-code-analysis:
    #    needs: [lint]
    ##    if: ${{ !github.event.act }}
    #    runs-on: ubuntu-latest
    #    steps:
    #      - name: Checkout the code
    #        uses: actions/checkout@v4
    #
    #      - name: set up JDK 17
    #        uses: actions/setup-java@v1
    #        with:
    #          java-version: 17
    #
    #      - name: SonarCloud Scan
    #        run: ./gradlew sonarqube -Dsonar.login=${{ secrets.note_mvvm_application }}
    #        env:
    #          GITHUB_TOKEN: ${{ secrets.NOTE_MVVM_APPLICATION }}

    #  static-code-analysis:
#    needs: [ lint ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'temurin'
#          java-version: 17
#
#      - name: SonarCloud Scan
##        run: ./gradlew sonar-scanner -Dsonar.login=${{ secrets.SONAR_TOKEN }}
#        run: ./gradlew sonar-scanner -Dsonar.host.url=https://sonarcloud.io
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#  static-code-analysis:
#    needs: [ lint ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'temurin'
#          java-version: 17
#
#      - name: SonarCloud Scan
#        run: ./gradlew sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.note_mvvm_application }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.NOTE_MVVM_APPLICATION }}
#
#  package:
#    needs: [static-code-analysis]
#    name: Generate APK
##    if: ${{ !github.event.act }}
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: set up JDK 17
#        uses: actions/setup-java@v1
#        with:
#          java-version: 17
#
#      - name: Build debug APK
#        run: ./gradlew assembleDebug --stacktrace
#
#      - name: Upload APK
#        uses: actions/upload-artifact@v4
#        with:
#          name: note_mvvm_application.apk
#          path: app/build/outputs/apk/debug/app-debug.apk


#New-1------------------
#
#name: CI
#on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
#  workflow_dispatch:
#
#jobs:
#  lint:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: Upload html test report
#        uses: actions/upload-artifact@v4
#        with:
#          name: lint.html
#          path: app/build/reports/problems/problems-report.html
#
#  unit-test:
#    needs: [lint]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: Run tests
#        run: ./gradlew test
#
#      - name: Upload test report
#        uses: actions/upload-artifact@v4
#        with:
#          name: unit_test_report
#          path: app/build/reports/tests/testDebugUnitTest/
#
#  static-code-analysis:
#    needs: [unit-test] # <-- Removed instrumentation-test
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v1
#        with:
#          java-version: 17
#
#      - name: SonarCloud Scan
#        run: ./gradlew sonar -Dsonar.login=${{ secrets.NOTE_MVVM_APPLICATION }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#  package:
#    needs: [static-code-analysis]
#    name: Generate APK
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v1
#        with:
#          java-version: 17
#
#      - name: Build debug APK
#        run: ./gradlew assembleDebug --stacktrace
#
#      - name: Upload APK
#        uses: actions/upload-artifact@v4
#        with:
#          name: expense-manager.apk
#          path: app/build/outputs/apk/debug/app-debug.apk

#New-2------------------

#name: CI
#on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
#  workflow_dispatch:
#
#jobs:
#  lint:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: Upload html test report
#        uses: actions/upload-artifact@v4
#        with:
#          name: lint.html
#          path: app/build/reports/problems/problems-report.html

#  static-code-analysis:
#    needs: [lint]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v1
#        with:
#          java-version: 17
#
#      - name: SonarCloud Scan
#        uses: SonarSource/sonarcloud-github-action@master
#        with:
#          projectBaseDir: .
#        env:
#          SONAR_TOKEN: ${{ secrets.note_mvvm_application }}
#          GITHUB_TOKEN: ${{ secrets.NOTE_MVVM_APPLICATION }}
#
#  package:
#    needs: [lint]
#    name: Generate APK
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v1
#        with:
#          java-version: 17
#
#      - name: Build debug APK
#        run: ./gradlew assembleDebug --stacktrace
#
#      - name: Upload APK
#        uses: actions/upload-artifact@v4
#        with:
#          name: note_mvvm_application.apk
#          path: app/build/outputs/apk/debug/app-debug.apk

